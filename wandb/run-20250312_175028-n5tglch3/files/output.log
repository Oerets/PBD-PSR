(239, 330)
(94, 108)
(220, 364)
(60, 301)
(197, 289)
(200, 254)
(297, 374)
(216, 336)
(181, 302)
(131, 199)
(238, 253)
(117, 188)
(303, 382)
(88, 110)
(270, 347)
(198, 382)
(260, 256)
(183, 287)
(172, 230)
(183, 227)
(87, 108)
(209, 286)
(157, 216)
(135, 236)
(99, 168)
(108, 221)
(201, 374)
(179, 319)
(192, 324)
(216, 319)
(67, 103)
(120, 197)
(209, 262)
(139, 193)
(54, 74)
(222, 293)
(94, 117)
(72, 154)
(109, 194)
(201, 322)
(72, 108)
(87, 153)
(65, 314)
(253, 312)
(179, 271)
(199, 346)
(111, 224)
(78, 130)
(297, 339)
(95, 157)
(139, 215)
(227, 250)
(182, 283)
(188, 230)
(172, 264)
(131, 216)
(206, 283)
(209, 279)
(256, 321)
(186, 267)
(138, 224)
(124, 248)
(44, 73)
(143, 263)
(256, 292)
(172, 262)
(145, 243)
(162, 227)
(66, 84)
(233, 284)
(69, 103)
(46, 92)
(279, 281)
(199, 235)
(223, 348)
(83, 94)
(48, 80)
(249, 307)
(293, 392)
(130, 191)
(205, 268)
(310, 339)
(155, 248)
(188, 240)
(191, 338)
(60, 72)
(188, 245)
(133, 252)
(134, 204)
(225, 248)
(220, 265)
(143, 190)
(160, 204)
(78, 102)
(67, 89)
(161, 214)
(160, 214)
(336, 419)
(241, 347)
(56, 68)
(165, 282)
(57, 77)
(161, 263)
(129, 220)
(260, 332)
(174, 305)
(195, 244)
(93, 110)
(128, 326)
(186, 227)
(210, 233)
(205, 305)
(205, 320)
(176, 196)
(144, 218)
(98, 94)
(127, 253)
(153, 312)
(354, 358)
(171, 226)
(138, 309)
(82, 90)
(126, 227)
(117, 275)
(110, 165)
(40, 95)
(182, 322)
(165, 336)
(171, 226)
(129, 209)
(102, 120)
(67, 99)
(60, 99)
(259, 348)
(196, 341)
(221, 253)
(227, 396)
(223, 249)
(68, 80)
(187, 217)
(121, 182)
(83, 85)
(160, 218)
(86, 164)
(143, 233)
(93, 164)
(131, 218)
(143, 265)
(162, 215)
(240, 302)
(269, 310)
(91, 100)
(182, 220)
(191, 312)
(186, 310)
(319, 332)
(144, 216)
(83, 94)
(256, 358)
(372, 409)
(160, 226)
(297, 376)
(216, 287)
(204, 338)
(58, 95)
(287, 250)
(57, 94)
(226, 292)
(285, 337)
(94, 192)
(306, 377)
(86, 92)
(304, 355)
(149, 215)
(168, 294)
(233, 344)
(126, 188)
(145, 269)
(199, 222)
(47, 90)
(210, 267)
(244, 336)
(191, 250)
(238, 330)
(206, 224)
(135, 220)
(51, 91)
(128, 237)
(154, 393)
(220, 286)
(194, 308)
(155, 400)
(171, 250)
(179, 310)
(192, 254)
(178, 319)
(131, 191)
(284, 256)
(175, 320)
(213, 313)
(183, 242)
(93, 110)
(198, 297)
(134, 227)
(131, 227)
(187, 310)
(124, 243)
(265, 350)
(213, 259)
(161, 240)
(84, 98)
(55, 84)
(44, 72)
(263, 347)
(74, 92)
(232, 396)
(199, 315)
(160, 298)
(56, 106)
(171, 218)
(128, 214)
(328, 406)
(169, 262)
(267, 303)
(129, 293)
(214, 271)
(164, 204)
(128, 297)
(117, 176)
(136, 294)
(226, 347)
(154, 354)
(180, 218)
(100, 113)
(108, 216)
(127, 243)
(312, 351)
(157, 243)
(197, 241)
(172, 394)
(183, 348)
(177, 242)
(50, 84)
(83, 116)
(133, 192)
(171, 232)
(183, 218)
(171, 225)
(155, 233)
(127, 209)
(267, 286)
(120, 186)
(182, 226)
(91, 104)
(259, 284)
(160, 204)
(199, 318)
(200, 331)
(183, 323)
(215, 340)
(182, 293)
(192, 356)
(210, 325)
(98, 183)
(301, 355)
(213, 258)
(119, 216)
(149, 179)
(178, 330)
(188, 227)
(169, 265)
(204, 348)
(230, 287)
(217, 337)
(200, 258)
(142, 276)
(234, 274)
(206, 208)
(188, 331)
(161, 252)
(198, 266)
(170, 270)
(95, 188)
(143, 215)
(128, 262)
(89, 117)
(127, 274)
(172, 242)
(216, 232)
(180, 242)
(275, 332)
(43, 100)
(143, 195)
(171, 357)
(142, 210)
(206, 314)
(108, 218)
(92, 116)
(171, 259)
(43, 74)
(172, 187)
(168, 293)
(171, 270)
(147, 218)
(267, 318)
(89, 94)
(129, 216)
(309, 352)
(230, 304)
(66, 83)
(171, 222)
(324, 380)
(277, 309)
(196, 309)
(150, 217)
(354, 356)
(394, 462)
(308, 313)
(174, 277)
(171, 248)
(284, 364)
(125, 198)
(154, 305)
(174, 297)
(47, 98)
(294, 340)
(144, 217)
(276, 314)
(157, 329)
(326, 356)
(226, 392)
(144, 241)
(186, 352)
(193, 350)
(117, 234)
(189, 313)
(188, 260)
(294, 396)
(99, 102)
(172, 222)
(57, 88)
(183, 258)
(180, 364)
(112, 227)
(307, 262)
(233, 350)
(215, 269)
(182, 240)
(188, 237)
(148, 322)
(204, 323)
(191, 275)
(171, 232)
(198, 250)
(250, 297)
(264, 318)
(220, 302)
(73, 109)
(118, 175)
(87, 110)
(77, 99)
(47, 68)
(56, 66)
(196, 248)
(87, 105)
(196, 230)
(43, 84)
(175, 239)
(174, 300)
(235, 348)
(139, 209)
(163, 216)
(121, 224)
(244, 350)
(135, 260)
(279, 325)
(131, 304)
(297, 336)
(189, 326)
(139, 196)
(180, 231)
(117, 213)
(178, 253)
(200, 253)
(249, 293)
(150, 174)
(73, 93)
(248, 295)
(62, 111)
(218, 311)
(221, 188)
(128, 263)
(169, 222)
(270, 311)
(192, 242)
(195, 217)
(179, 209)
(81, 106)
(276, 389)
(199, 257)
(209, 216)
(100, 165)
(136, 192)
(199, 332)
(75, 116)
(45, 98)
(166, 231)
(138, 232)
(121, 209)
(207, 328)
(206, 220)
(265, 348)
(226, 264)
(134, 207)
(217, 283)
(265, 359)
(59, 108)
(109, 172)
(138, 195)
(132, 220)
(188, 238)
(218, 257)
(124, 196)
(151, 231)
(143, 209)
(145, 205)
(99, 205)
(118, 198)
(186, 276)
(92, 127)
(294, 357)
(94, 199)
(81, 100)
(230, 352)
(326, 373)
(122, 206)
(286, 329)
(128, 207)
(295, 320)
(153, 253)
(61, 72)
(277, 372)
(331, 381)
(176, 239)
(92, 104)
(219, 321)
(154, 234)
(289, 363)
(209, 245)
(234, 303)
(191, 245)
(149, 231)
(151, 223)
(34, 77)
(148, 261)
(170, 306)
(63, 92)
(172, 244)
(137, 270)
(160, 341)
(156, 270)
(165, 233)
(126, 180)
(209, 319)
(50, 98)
(133, 204)
(137, 224)
(125, 216)
(182, 286)
(104, 110)
(77, 105)
(116, 210)
(155, 277)
(156, 292)
(205, 220)
(74, 84)
(178, 200)
(143, 236)
(231, 268)
(169, 259)
(122, 212)
(90, 119)
(67, 119)
(127, 188)
(127, 190)
(162, 289)
(226, 314)
(242, 327)
(208, 330)
(160, 258)
(199, 305)
(67, 110)
(127, 227)
(212, 368)
(137, 264)
(352, 450)
(230, 306)
(198, 337)
(154, 293)
(124, 197)
(209, 279)
(87, 100)
(146, 227)
(183, 236)
(61, 73)
(37, 80)
(128, 207)
(64, 93)
(154, 231)
(148, 221)
(254, 371)
(177, 220)
(248, 357)
(181, 227)
(154, 270)
(94, 178)
(85, 144)
(102, 187)
(177, 305)
(67, 94)
(87, 112)
(55, 105)
(62, 103)
(74, 77)
(92, 101)
(176, 267)
(171, 252)
(154, 253)
(200, 287)
(220, 231)
(128, 190)
(86, 148)
(171, 227)
(137, 197)
(226, 249)
(102, 183)
(132, 257)
(207, 357)
(183, 276)
(182, 248)
(150, 300)
(147, 236)
(205, 281)
(68, 90)
(190, 327)
(137, 222)
(171, 321)
(176, 252)
(182, 283)
(232, 296)
(117, 175)
(189, 245)
(238, 359)
(165, 232)
(83, 105)
(165, 219)
(39, 100)
(234, 249)
(164, 282)
(82, 85)
(149, 213)
(173, 238)
(238, 381)
(204, 210)
(183, 260)
(193, 358)
out of bound vert detected
(147, 204)
(240, 322)
Process Process-4:
Traceback (most recent call last):
  File "C:\Users\hyunoh\anaconda3\envs\spine\lib\multiprocessing\process.py", line 315, in _bootstrap
    self.run()
  File "C:\Users\hyunoh\anaconda3\envs\spine\lib\multiprocessing\process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "C:\Users\hyunoh\Documents\Codes\BMD_code\train.py", line 46, in train_fold
    train_loss = train_one_epoch(model, train_loader, optimizer, criterion, device)
  File "C:\Users\hyunoh\Documents\Codes\BMD_code\train.py", line 70, in train_one_epoch
    for images, labels, _ in train_loader:
  File "C:\Users\hyunoh\anaconda3\envs\spine\lib\site-packages\torch\utils\data\dataloader.py", line 630, in __next__
    data = self._next_data()
  File "C:\Users\hyunoh\anaconda3\envs\spine\lib\site-packages\torch\utils\data\dataloader.py", line 673, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "C:\Users\hyunoh\anaconda3\envs\spine\lib\site-packages\torch\utils\data\_utils\fetch.py", line 55, in fetch
    return self.collate_fn(data)
  File "C:\Users\hyunoh\anaconda3\envs\spine\lib\site-packages\torch\utils\data\_utils\collate.py", line 317, in default_collate
    return collate(batch, collate_fn_map=default_collate_fn_map)
  File "C:\Users\hyunoh\anaconda3\envs\spine\lib\site-packages\torch\utils\data\_utils\collate.py", line 174, in collate
    return [collate(samples, collate_fn_map=collate_fn_map) for samples in transposed]  # Backwards compatibility.
  File "C:\Users\hyunoh\anaconda3\envs\spine\lib\site-packages\torch\utils\data\_utils\collate.py", line 174, in <listcomp>
    return [collate(samples, collate_fn_map=collate_fn_map) for samples in transposed]  # Backwards compatibility.
  File "C:\Users\hyunoh\anaconda3\envs\spine\lib\site-packages\torch\utils\data\_utils\collate.py", line 146, in collate
    return collate_fn_map[collate_type](batch, collate_fn_map=collate_fn_map)
  File "C:\Users\hyunoh\anaconda3\envs\spine\lib\site-packages\torch\utils\data\_utils\collate.py", line 227, in collate_numpy_scalar_fn
    return torch.as_tensor(batch)
RuntimeError: Could not infer dtype of NoneType

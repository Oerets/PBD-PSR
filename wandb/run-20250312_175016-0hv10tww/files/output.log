(148, 347)
(112, 244)
(93, 110)
(301, 355)
(117, 179)
(129, 193)
(237, 322)
(176, 303)
(274, 277)
(99, 176)
(192, 220)
(73, 84)
(120, 186)
(238, 381)
(68, 74)
(270, 328)
(170, 270)
(200, 287)
(144, 217)
(61, 109)
(129, 212)
(279, 380)
(222, 348)
(176, 354)
(240, 322)
(266, 314)
(127, 196)
(72, 107)
(99, 104)
(111, 224)
(87, 112)
(84, 89)
(63, 91)
(269, 315)
(204, 249)
(84, 116)
(143, 204)
(187, 227)
(57, 88)
(177, 252)
(127, 194)
(66, 98)
(133, 205)
(59, 77)
(72, 76)
(169, 258)
(210, 257)
(179, 237)
(186, 254)
(230, 352)
(62, 103)
(119, 198)
(88, 110)
(226, 266)
(170, 283)
(199, 252)
(55, 77)
(137, 197)
(161, 245)
(157, 243)
(139, 186)
(46, 74)
(274, 293)
(216, 326)
(277, 358)
(122, 239)
(198, 293)
(126, 188)
(238, 359)
(183, 271)
(128, 243)
(61, 104)
(153, 217)
(197, 240)
(173, 311)
(146, 332)
(131, 195)
(157, 227)
(294, 396)
(75, 93)
(189, 326)
(172, 209)
(190, 238)
(118, 194)
(120, 230)
(128, 210)
(312, 348)
(143, 242)
(204, 369)
(199, 226)
(253, 270)
(113, 210)
(303, 347)
(245, 284)
(289, 338)
(139, 187)
(117, 176)
(187, 232)
(209, 256)
(188, 385)
(136, 225)
(95, 288)
(155, 196)
(157, 275)
(143, 347)
(205, 226)
(120, 183)
(253, 359)
(77, 105)
(193, 217)
(68, 84)
(217, 283)
(168, 274)
(171, 245)
(200, 242)
(161, 263)
(192, 253)
(165, 285)
(73, 84)
(139, 241)
(101, 99)
(166, 266)
(153, 264)
(67, 100)
(204, 312)
(59, 90)
(160, 260)
(174, 305)
(143, 265)
(150, 217)
(204, 277)
(196, 311)
(212, 307)
(138, 200)
(232, 396)
(117, 187)
(169, 276)
(37, 86)
(172, 234)
(221, 253)
(139, 175)
(128, 207)
(84, 110)
(174, 216)
(93, 232)
(153, 262)
(179, 275)
(238, 271)
(227, 275)
(154, 258)
(87, 153)
(171, 302)
(103, 219)
(199, 257)
(78, 92)
(80, 89)
(157, 292)
(227, 250)
(171, 222)
(187, 238)
(215, 269)
(58, 95)
(204, 265)
(173, 226)
(171, 245)
(146, 345)
(220, 336)
(315, 354)
(129, 256)
(189, 232)
(213, 313)
(199, 204)
(99, 168)
(165, 271)
(302, 323)
(206, 208)
(145, 239)
(62, 92)
(129, 192)
(292, 391)
(174, 254)
(168, 266)
(231, 240)
(193, 350)
(175, 204)
(209, 216)
(169, 219)
(90, 122)
(174, 253)
(198, 313)
(69, 103)
(150, 300)
(124, 191)
(83, 100)
(165, 269)
(265, 350)
(218, 336)
(322, 348)
(175, 239)
(172, 252)
(198, 348)
(124, 243)
(222, 277)
(218, 293)
(285, 336)
(268, 350)
(90, 103)
(131, 304)
(180, 264)
(217, 367)
(251, 359)
(320, 319)
(209, 333)
(162, 224)
(156, 338)
(66, 101)
(154, 242)
(300, 359)
(121, 209)
(73, 131)
(143, 233)
(82, 106)
(267, 286)
(68, 330)
(127, 198)
(66, 92)
(155, 248)
(86, 111)
(128, 263)
(81, 100)
(225, 312)
(83, 105)
(179, 244)
(274, 264)
(45, 98)
(62, 107)
(125, 197)
(147, 311)
(157, 340)
(62, 121)
(345, 350)
(154, 393)
(199, 235)
(143, 200)
(40, 86)
(180, 364)
(95, 207)
(108, 221)
(69, 111)
(182, 242)
(138, 238)
(128, 227)
(153, 253)
(80, 100)
(58, 94)
(133, 192)
(239, 330)
(176, 196)
(175, 251)
(143, 227)
(153, 312)
(98, 94)
(245, 259)
(67, 111)
(165, 233)
(109, 172)
(165, 321)
(134, 241)
(233, 319)
(171, 232)
(146, 209)
(277, 309)
(219, 337)
(191, 250)
(73, 93)
(209, 226)
(264, 400)
(175, 253)
(269, 310)
(50, 84)
(39, 81)
(72, 108)
(216, 269)
(116, 230)
(161, 398)
(161, 231)
(138, 236)
(253, 286)
(181, 220)
(94, 187)
(142, 210)
(138, 276)
(120, 226)
(178, 297)
(327, 346)
(174, 249)
(64, 87)
(137, 222)
(156, 253)
(326, 356)
(112, 223)
(128, 219)
(94, 189)
(183, 351)
(128, 207)
(130, 216)
(169, 265)
(173, 323)
(80, 112)
(274, 280)
(90, 110)
(297, 359)
(268, 309)
(306, 330)
(84, 110)
(121, 204)
(181, 258)
(87, 88)
(281, 386)
(199, 344)
(183, 287)
(189, 245)
(254, 371)
(95, 157)
(249, 402)
(221, 293)
(58, 90)
(217, 304)
(252, 315)
(128, 205)
(186, 310)
(68, 84)
(119, 188)
(144, 256)
(174, 315)
(83, 106)
(160, 223)
(56, 86)
(172, 232)
(179, 279)
(394, 462)
(198, 266)
(197, 309)
(200, 258)
(298, 277)
(40, 98)
(187, 204)
(121, 242)
(286, 329)
(221, 315)
(160, 305)
(142, 207)
(180, 312)
(161, 270)
(67, 94)
(197, 234)
(84, 172)
(139, 270)
(137, 209)
(132, 258)
(191, 253)
(206, 275)
(66, 84)
(63, 91)
(77, 99)
(59, 89)
(306, 346)
(183, 249)
(131, 191)
(109, 223)
(168, 242)
(117, 217)
(85, 95)
(116, 217)
(73, 99)
(143, 199)
(64, 105)
(113, 205)
(67, 111)
(88, 118)
(196, 336)
(200, 253)
(66, 83)
(270, 348)
(127, 187)
(199, 305)
(319, 304)
(259, 276)
(208, 330)
(69, 85)
(171, 218)
(176, 224)
(328, 389)
(171, 238)
(143, 256)
(183, 276)
(172, 242)
(91, 110)
(85, 144)
(191, 275)
(37, 95)
(235, 304)
(198, 333)
(227, 304)
(161, 294)
(61, 73)
(91, 110)
(149, 210)
(226, 325)
(182, 262)
(143, 195)
(143, 263)
(176, 289)
(182, 261)
(163, 230)
(112, 217)
(181, 236)
(222, 276)
(187, 367)
(242, 367)
(292, 363)
(249, 319)
(204, 315)
(155, 400)
(57, 99)
(171, 303)
(95, 213)
(103, 105)
(260, 332)
(221, 271)
(77, 93)
(201, 253)
(65, 113)
(178, 328)
(181, 236)
(74, 113)
(187, 336)
(220, 348)
(307, 262)
(208, 262)
(187, 249)
(117, 241)
(212, 368)
(245, 309)
(155, 258)
(47, 72)
(212, 318)
(227, 330)
(276, 314)
(231, 270)
(127, 245)
(174, 216)
(121, 224)
(84, 100)
(154, 231)
(108, 181)
(310, 365)
(81, 93)
(254, 280)
(119, 174)
(182, 217)
(138, 232)
(83, 99)
(131, 227)
(209, 363)
(198, 280)
(160, 227)
(148, 322)
(240, 305)
(135, 260)
(236, 402)
(161, 240)
(230, 314)
(154, 218)
(188, 224)
(207, 295)
(175, 215)
(218, 300)
(194, 287)
(126, 244)
(84, 100)
(181, 200)
(235, 348)
(128, 327)
(143, 205)
(187, 352)
(182, 277)
(326, 373)
(355, 328)
(161, 402)
(110, 170)
(77, 80)
(121, 217)
(205, 254)
(85, 86)
(209, 314)
(220, 325)
(182, 293)
(324, 380)
(197, 241)
(230, 287)
(44, 73)
(354, 430)
(215, 251)
(230, 279)
(276, 380)
(118, 199)
(113, 222)
(177, 285)
(58, 84)
(116, 250)
(189, 313)
(197, 277)
(190, 327)
(171, 259)
(166, 328)
(174, 300)
(130, 245)
(136, 287)
out of bound vert detected
(183, 320)
Process Process-2:
Traceback (most recent call last):
  File "C:\Users\hyunoh\anaconda3\envs\spine\lib\multiprocessing\process.py", line 315, in _bootstrap
    self.run()
  File "C:\Users\hyunoh\anaconda3\envs\spine\lib\multiprocessing\process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "C:\Users\hyunoh\Documents\Codes\BMD_code\train.py", line 46, in train_fold
    train_loss = train_one_epoch(model, train_loader, optimizer, criterion, device)
  File "C:\Users\hyunoh\Documents\Codes\BMD_code\train.py", line 70, in train_one_epoch
    for images, labels, _ in train_loader:
  File "C:\Users\hyunoh\anaconda3\envs\spine\lib\site-packages\torch\utils\data\dataloader.py", line 630, in __next__
    data = self._next_data()
  File "C:\Users\hyunoh\anaconda3\envs\spine\lib\site-packages\torch\utils\data\dataloader.py", line 673, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "C:\Users\hyunoh\anaconda3\envs\spine\lib\site-packages\torch\utils\data\_utils\fetch.py", line 55, in fetch
    return self.collate_fn(data)
  File "C:\Users\hyunoh\anaconda3\envs\spine\lib\site-packages\torch\utils\data\_utils\collate.py", line 317, in default_collate
    return collate(batch, collate_fn_map=default_collate_fn_map)
  File "C:\Users\hyunoh\anaconda3\envs\spine\lib\site-packages\torch\utils\data\_utils\collate.py", line 174, in collate
    return [collate(samples, collate_fn_map=collate_fn_map) for samples in transposed]  # Backwards compatibility.
  File "C:\Users\hyunoh\anaconda3\envs\spine\lib\site-packages\torch\utils\data\_utils\collate.py", line 174, in <listcomp>
    return [collate(samples, collate_fn_map=collate_fn_map) for samples in transposed]  # Backwards compatibility.
  File "C:\Users\hyunoh\anaconda3\envs\spine\lib\site-packages\torch\utils\data\_utils\collate.py", line 146, in collate
    return collate_fn_map[collate_type](batch, collate_fn_map=collate_fn_map)
  File "C:\Users\hyunoh\anaconda3\envs\spine\lib\site-packages\torch\utils\data\_utils\collate.py", line 227, in collate_numpy_scalar_fn
    return torch.as_tensor(batch)
RuntimeError: Could not infer dtype of NoneType
